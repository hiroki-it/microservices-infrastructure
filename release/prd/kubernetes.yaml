---
# Source: microservices-manifests-kubernetes/templates/manifests/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: microservices
  labels:
    env: prd
    istio-injection: enabled
---
# Source: microservices-manifests-kubernetes/templates/manifests/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: argocd
  labels:
    env: prd
---
# Source: microservices-manifests-kubernetes/templates/manifests/account/app/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: microservices
  name: account-app-service
  labels:
    app: account
    component: app
    env: prd
spec:
  type: ClusterIP
  selector:
    app: account
    component: app
  ports:
    - name: http-account
      appProtocol: http
      port: 80
      targetPort: 8080
---
# Source: microservices-manifests-kubernetes/templates/manifests/customer/app/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: microservices
  name: customer-app-service
  labels:
    app: customer
    component: app
    env: prd
spec:
  type: ClusterIP
  selector:
    app: customer
    component: app
  ports:
    - name: http-customer
      appProtocol: http
      port: 80
      targetPort: 8000
---
# Source: microservices-manifests-kubernetes/templates/manifests/orchestrator/app/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: microservices
  name: orchestrator-service
  labels:
    app: orchestrator
    env: prd
spec:
  type: ClusterIP
  selector:
    app: orchestrator
  ports:
    - name: http-orchestrator
      appProtocol: http
      port: 80
      targetPort: 8000
---
# Source: microservices-manifests-kubernetes/templates/manifests/order/app/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: microservices
  name: order-app-service
  labels:
    app: order
    component: app
    env: prd
spec:
  type: ClusterIP
  selector:
    app: order
    component: app
  ports:
    - name: http-order
      appProtocol: http
      port: 80
      targetPort: 8080
---
# Source: microservices-manifests-kubernetes/templates/manifests/account/app/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: microservices
  name: account-app-pod
  labels:
    app: account
    component: app
    env: prd
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
  selector:
    matchLabels:
      app: account
      component: app
      env: prd
  template:
    metadata:
      labels:
        app: account
        component: app
        env: prd
    spec:
      hostname: account-app-pod
      containers:
        # Ginコンテナ
        - name: gin
          image: account-gin:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---
# Source: microservices-manifests-kubernetes/templates/manifests/customer/app/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: microservices
  name: customer-app-pod
  labels:
    app: customer
    component: app
    env: prd
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
  selector:
    matchLabels:
      app: customer
      component: app
      env: prd
  template:
    metadata:
      labels:
        app: customer
        component: app
        env: prd
    spec:
      hostname: customer-app-pod
      containers:
        # FastAPIコンテナ
        - name: fastapi
          image: customer-fastapi:a0e4ba5
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
---
# Source: microservices-manifests-kubernetes/templates/manifests/orchestrator/app/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: microservices
  name: orchestrator-pod
  labels: 
    app: orchestrator
    env: prd
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
  selector:
    matchLabels:
      app: orchestrator
      env: prd
  template:
    metadata:
      labels:
        app: orchestrator
        env: prd
    spec:
      hostname: orchestrator-pod
      containers:
        # FastAPIコンテナ
        - name: fastapi
          image: orchestrator-fastapi:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
---
# Source: microservices-manifests-kubernetes/templates/manifests/order/app/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: microservices
  name: order-app-pod
  labels:
    app: order
    component: app
    env: prd
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
  selector:
    matchLabels:
      app: order
      component: app
      env: prd
  template:
    metadata:
      labels:
        app: order
        component: app
        env: prd
    spec:
      hostname: order-app-pod
      containers:
        # Lumenコンテナ
        - name: lumen
          image: order-lumen:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9000
        - name: nginx
          image: order-nginx:b5d0574
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
